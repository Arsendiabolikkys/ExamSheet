@model ExamSheet.Web.Models.ExamSheetViewModel
@{
    var groups = (List<GroupViewModel>)ViewData["groups"];
    var groupsList = new List<SelectListItem>(groups.Select(x => new SelectListItem() { Value = x.Id, Text = x.Name }));
    var subjects = (List<SubjectViewModel>)ViewData["subjects"];
    var subjectsList = new List<SelectListItem>(subjects.Select(x => new SelectListItem() { Value = x.Id, Text = x.Name }));
    var teachers = (List<TeacherViewModel>)ViewData["teachers"];
    var teachersList = new List<SelectListItem>(teachers.Select(x => new SelectListItem() { Value = x.Id, Text = x.Name }));
}

<div class="form-group">
    @Html.EditorFor(m => m.State)
</div>
<div class="form-group">
    @Html.LabelFor(m => m.OpenDate)
    @Html.EditorFor(m => m.OpenDate)
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Faculty.Name)
    @Html.HiddenFor(m => m.Faculty.Id)
    @Html.TextBoxFor(m => m.Faculty.Name, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
    @Html.ValidationMessageFor(m => m.Faculty.Id)
</div>
<div class="form-group">
    @Html.LabelFor(m => m.GroupId)
    @Html.DropDownListFor(m => m.GroupId, groupsList, htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.GroupId)
</div>
<div class="form-group">
    @Html.LabelFor(m => m.SubjectId)
    @Html.DropDownListFor(m => m.SubjectId, subjectsList, htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.SubjectId)
</div>
<div class="form-group">
    @Html.LabelFor(m => m.TeacherId)
    @Html.DropDownListFor(m => m.TeacherId, teachersList, htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.TeacherId)
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Semester)
    @Html.EditorFor(m => m.Semester)
    @Html.ValidationMessageFor(m => m.Semester)
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Year)
    @Html.EditorFor(m => m.Year)
    @Html.ValidationMessageFor(m => m.Year)
</div>